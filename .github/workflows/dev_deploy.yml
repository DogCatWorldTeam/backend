# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run:
        chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build -x test
      shell: bash

    - name: Build With Gradle
      if: contains(github.ref, 'develop')
      run: ./gradlew build -x test

  # Spring 어플리케이션 Docker Image 빌드
    - name: Build Docker Image For Spring
      run: |
        docker login -u ${{ secrets.DOCKER_REPO }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/도커 레파지토리 이름 .
        docker push ${{ secrets.DOCKER_REPO }}/도커 레파지토리 이름
        
    # 서버에서 Docker 이미지 실행
    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker rm -f $(docker ps -qa)
          docker rmi ${{ secrets.DOCKER_REPO }}/도커 레파지토리 이름
          docker pull ${{ secrets.DOCKER_REPO }}/도커 레파지토리 이름
          docker-compose up -d
